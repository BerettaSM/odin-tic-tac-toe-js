@charset "UTF-8";

/* CSS Resets */

*,
*::before,
*::after {
    box-sizing: border-box;
}

* {
    margin: 0;
}

html,
body {
    height: 100%;
}

body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
}

img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
}

input,
button,
textarea,
select,
a {
    font: inherit;
    -webkit-tap-highlight-color: transparent;
}

p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
}

/* Styles */

:root {
    --BG_HUE: 245;
    --BG_SAT: 100%;
    --BG_LIGHT: 14%;
    --COLOR_BG: hsl(var(--BG_HUE), var(--BG_SAT), var(--BG_LIGHT));
    --COLOR_BG_LIGHT: hsl(
        var(--BG_HUE),
        calc(var(--BG_SAT) - 15%),
        calc(var(--BG_LIGHT) - 5%)
    );
    --COLOR_BG_OFF: hsl(
        var(--BG_HUE),
        calc(var(--BG_SAT) - 40%),
        calc(var(--BG_LIGHT) - 10%)
    );

    --PRIMARY_HUE: 334;
    --PRIMARY_SAT: 100%;
    --PRIMARY_LIGHT: 46%;
    --COLOR_PRIMARY: hsl(
        var(--PRIMARY_HUE),
        var(--PRIMARY_SAT),
        var(--PRIMARY_LIGHT)
    );
    --COLOR_PRIMARY_SHADOW: hsl(
        var(--PRIMARY_HUE) var(--PRIMARY_SAT) var(--PRIMARY_LIGHT) / 0.25
    );
    --COLOR_PRIMARY_DARK: hsl(
        var(--PRIMARY_HUE),
        calc(var(--PRIMARY_SAT)),
        calc(var(--PRIMARY_LIGHT) - 15%)
    );
    --COLOR_PRIMARY_DARKER: hsl(
        var(--PRIMARY_HUE),
        calc(var(--PRIMARY_SAT)),
        calc(var(--PRIMARY_LIGHT) - 25%)
    );
    --COLOR_PRIMARY_TRANSPARENT: hsl(
        var(--PRIMARY_HUE) var(--PRIMARY_SAT) var(--PRIMARY_LIGHT) / 0.15
    );
    --COLOR_SECONDARY: hsl(328, 100%, 35%);

    --TERTIARY_HUE: 336;
    --TERTIARY_SAT: 100%;
    --TERTIARY_LIGHT: 69%;
    --COLOR_TERTIARY: hsl(
        var(--TERTIARY_HUE),
        var(--TERTIARY_SAT),
        var(--TERTIARY_LIGHT)
    );
    --TEXT_WHITE: whitesmoke;

    --MAX_WIDTH_PADDING: 16px;
    --BOARD_SIZE: max(200px, min(calc(100vw - 32px), 470px));
}

body {
    background: radial-gradient(var(--COLOR_BG), var(--COLOR_BG_OFF) 65%);
    font-family: 'Truculenta', sans-serif;
}

a {
    vertical-align: bottom;
    display: inline-block;
    padding-inline: 2px;
    position: relative;
    color: var(--COLOR_TERTIARY);
    text-decoration: none;
    overflow: hidden;
}

a::before {
    content: '';
    position: absolute;
    inset: 0;
    height: 100%;
    width: 100%;
    background-color: var(--COLOR_SECONDARY);
    transform: translateY(94%);
    z-index: -1;
}

a:hover,
a:active {
    color: var(--COLOR_PRIMARY);
}

a:hover::before,
a:active::before {
    background-color: var(--COLOR_TERTIARY);
    transform: translateY(0%);
    filter: brightness(1.35);
}

.app {
    height: 100%;
    width: 100%;
    padding-block: 16px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
}

.app h1 {
    color: var(--COLOR_PRIMARY);
    text-align: center;
    text-transform: uppercase;
    font-size: 3rem;
}

.app footer {
    color: var(--COLOR_PRIMARY);
    font-size: 1.2rem;
    text-align: center;
}

@media (max-width: 30rem) {
    .app h1 {
        font-size: 2.5rem;
    }
    .app footer {
        font-size: 1rem;
    }
}

@media (max-width: 20rem) {
    .app h1 {
        font-size: 2rem;
    }

    .app footer {
        font-size: 0.8rem;
    }
}

.app .main {
    position: relative;
    flex: auto;
    width: 100%;
    overflow: hidden;
}

.main__page {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 16px;
    height: 100%;
    width: 100%;
    opacity: 0;
    pointer-events: none;
    transition: opacity 250ms ease-in-out;
}

.main__page:not(:first-of-type) .pushable {
    width: 100%;
}

@media (max-width: 30rem) {
    .main__page.start-menu,
    .main__page.bot-difficulty-menu,
    .main__page.name-form {
        flex-direction: column;
        gap: 16px;
    }

    .main__page.game-type-menu .types-menu,
    .main__page.bot-difficulty-menu,
    .main__page.game-type-menu .pushable,
    .main__page.start-menu .pushable {
        width: 100%;
    }

    .main__page.game-type-menu {
        flex-direction: column;
        gap: 16px;
    }
}

.main__page:last-of-type {
    flex-direction: column;
    gap: 16px;
}

.main__page-active {
    opacity: 1;
    pointer-events: all;
    transition-delay: 350ms;
}

.main__page h2 {
    font-size: 2rem;
    color: var(--COLOR_PRIMARY);
    width: fit-content;
}

.main__page .types-menu {
    display: flex;
    flex-direction: column;
    gap: 16px;
    padding: 0;
}

.main__page .form {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.form__control {
    position: relative;
    padding-block-start: 32px;
}

.main__page .form .pushable {
    margin-block-start: 40px;
}

@media (max-width: 30rem) {
    .main__page .types-menu {
        width: 100%;
    }

    .main__page .form {
        width: calc(100% - var(--MAX_WIDTH_PADDING) * 2);
    }

    .main__page .form .pushable {
        margin-block-start: 40px;
    }
}

.form__control label {
    color: var(--COLOR_TERTIARY);
    position: absolute;
    display: block;
    top: 0;
    left: 24px;
    pointer-events: none;
    font-size: 1.25rem;
}

.form__control label .letter {
    display: inline-block;
    transform: translateY(43px);
}

.form__control input:focus + label .letter,
.form__control input:not(:placeholder-shown) + label .letter {
    transform: translateY(0px);
}

.form__control input {
    padding: 8px 24px;
    border: 2px solid transparent;
    border-radius: 100vmax;
    background-color: var(--COLOR_BG_LIGHT);
    color: var(--COLOR_PRIMARY);
    font-size: 1.25rem;
    width: 100%;
}

.form__control input:focus {
    outline: 2px solid var(--COLOR_PRIMARY);
}

.game-score {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
    color: var(--COLOR_PRIMARY);
    max-width: var(--BOARD_SIZE);
    width: 100%;
    list-style: none;
    padding: 0;
    opacity: 0;
    transition: opacity 350ms ease-in-out;
}

.game-score.visible {
    opacity: 1;
}

.game-score__player {
    display: flex;
    flex-direction: column;
    border: 2px solid transparent;
    border-radius: 6px;
    padding: 8px;
}

.game-score__player:last-of-type {
    align-items: flex-end;
}

.game-score__player.current {
    border-color: var(--COLOR_SECONDARY);
    background-color: var(--COLOR_PRIMARY_TRANSPARENT);
}

.game-score__player p {
    font-size: 1.5rem;
}

.game-score__player strong {
    font-size: 3rem;
    color: var(--COLOR_TERTIARY);
    padding-inline: 16px;
    line-height: 1;
}

@media (max-width: 30rem) {
    .game-score {
        flex-direction: column;
        align-items: center;
        justify-content: flex-end;
    }

    .game-score__player:last-of-type {
        align-items: center;
    }

    .game-score__player {
        flex-direction: revert;
        align-items: center;
        justify-content: space-between;
        padding-block: 4px;
        width: 100%;
    }

    .game-score__player strong {
        padding-inline-end: 0;
    }
}

@media (max-width: 20rem) {
    .game-score__player p {
        font-size: 1rem;
    }

    .game-score__player strong {
        font-size: 2rem;
    }
}

.game-board {
    position: relative;
    border: 2px solid var(--COLOR_PRIMARY);
    border-radius: 9px;
    height: var(--BOARD_SIZE);
    width: var(--BOARD_SIZE);
    isolation: isolate;
}

.game-board__cell-wrapper {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    height: 100%;
    width: 100%;
    gap: 5px;
    padding: 5px;
    transition: opacity 400ms ease-in-out;
    opacity: 1;
}

.game-board.tie .game-board__cell-wrapper {
    opacity: 0;
}

.game-board__tie-message {
    display: grid;
    place-content: center;
    position: absolute;
    border: 2px solid transparent;
    border-radius: 9px;
    height: 100%;
    width: 100%;
    inset: 0;
    pointer-events: none;
    background: transparent;
    opacity: 0;
    transition: opacity 350ms ease-in-out;
}

.game-board__tie-message h3 {
    font-size: 3rem;
    color: var(--COLOR_PRIMARY);
}

.game-board.tie .game-board__tie-message {
    opacity: 1;
}

.game-board__cell {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
}

.game-board__cell .symbol {
    max-width: 65%;
    max-height: 65%;
    margin: auto;
}

.game-board__cell .symbol path {
    fill: var(--COLOR_PRIMARY);
}

.game-board__cell .symbol.transparent {
    pointer-events: none;
}

.game-board__cell .symbol.transparent path {
    fill: var(--COLOR_PRIMARY_TRANSPARENT);
}

.cell-button {
    position: absolute;
    height: 100%;
    width: 100%;
    inset: 0;
    background-color: transparent;
    border: 2px solid var(--COLOR_PRIMARY);
    border-radius: 6px;
    color: var(--COLOR_PRIMARY);
    cursor: pointer;
    font-size: 4rem;
    transition: background-color 350ms ease-in, filter 350ms ease-in;
}

.cell-button:disabled {
    cursor: not-allowed;
}

.cell-button:not(:disabled):hover,
.cell-button:not(:disabled):focus {
    background-color: var(--COLOR_PRIMARY_TRANSPARENT);
    transition: background-color 150ms ease-out;
}

.cell-button:not(:disabled):active {
    border-color: var(--COLOR_TERTIARY);
    color: var(--COLOR_TERTIARY);
    background-color: hsl(
        var(--TERTIARY_HUE) var(--TERTIARY_SAT) var(--TERTIARY_LIGHT) / 0.15
    );
    transition: background-color 35ms ease-out;
}

.game-board__winner-line {
    position: absolute;
    overflow: hidden;
    background-color: transparent;
    border-radius: 100vmax;
    width: 250%;
    height: 10%;
    pointer-events: none;
    z-index: 1;
}

.game-board__winner-line.vertical {
    transform: rotateZ(0.25turn);
}

.game-board__winner-line.diagonal {
    width: 345%;
    transform: rotateZ(0.125turn);
}

.game-board__winner-line.diagonal.right {
    transform: rotateZ(-0.125turn);
}

.game-board__winner-line::after {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    inset: 0;
    background-color: transparent;
}

.game-board__winner-line.visible::after {
    background-color: var(--COLOR_TERTIARY);
}

.game-actions {
    display: flex;
    flex-wrap: wrap;
    gap: 16px;
    width: var(--BOARD_SIZE);
}

.game-actions > .pushable {
    flex-basis: calc(50% - 8px);
}

.game-actions > .pushable.main-menu-button {
    margin-block-start: 0;
}

.pushable .pushable__label {
    gap: 8px;
}

.pushable .icon {
    height: 30px;
    width: 30px;
    transform: rotateZ(0.5turn);
}

.pushable .icon path {
    stroke: var(--TEXT_WHITE);
    fill: transparent;
}

@media (max-width: 30rem) {
    .game-score {
        flex: 1;
    }

    .game-actions {
        flex: 1;
        flex-direction: column-reverse;
        justify-content: flex-end;
    }

    .game-actions > .pushable {
        flex-basis: revert;
    }
}

/* 3D Magical Buttons, by Josh W. Comeau - https://www.joshwcomeau.com/animation/3d-button/ */
.pushable {
    position: relative;
    border: none;
    background: transparent;
    padding: 0;
    min-width: 140px;
    cursor: pointer;
    outline-offset: 4px;
    transition: filter 250ms;
    width: fit-content;
}

.pushable:disabled {
    cursor: not-allowed;
}

.pushable__shadow {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 12px;
    background: var(--COLOR_PRIMARY_SHADOW);
    will-change: transform;
    transform: translateY(2px);
}

.pushable:disabled .pushable__shadow {
    transform: translateY(0px);
}

.pushable__edge {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 12px;
    background: linear-gradient(
        to left,
        var(--COLOR_PRIMARY_DARKER) 0%,
        var(--COLOR_PRIMARY_DARK) 8%,
        var(--COLOR_PRIMARY_DARK) 92%,
        var(--COLOR_PRIMARY_DARKER) 100%
    );
}

.pushable:disabled .pushable__edge {
    background: var(--COLOR_PRIMARY_DARKER);
}

.pushable__label {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    background-color: var(--COLOR_PRIMARY);
    color: var(--TEXT_WHITE);
    border-radius: 12px;
    padding: 12px 42px;
    font-size: 1.25rem;
    will-change: transform;
    transform: translateY(-4px);
    width: 100%;
    height: 100%;
}

.pushable.main-menu-button {
    margin-block-start: 32px;
}

.pushable.main-menu-button::before {
    position: absolute;
    content: '';
    top: -5%;
    left: 0;
    height: 20%;
    width: 100%;
    backdrop-filter: blur(10px);
}

.pushable.main-menu-button .pushable__shadow {
    background-color: transparent;
}

.pushable.main-menu-button .pushable__edge {
    background: transparent;
    border: 1px solid var(--COLOR_PRIMARY);
}

.pushable.main-menu-button .pushable__label {
    background-color: transparent;
    border: 1px solid var(--COLOR_PRIMARY);
    color: var(--COLOR_PRIMARY);
}

.pushable.main-menu-button .icon path {
    stroke: var(--COLOR_PRIMARY);
}

@media (max-width: 30rem) {
    .pushable__label {
        padding: 6px 12px;
    }
}

.pushable:disabled .pushable__label {
    background-color: var(--COLOR_PRIMARY_DARKER);
    color: var(--COLOR_PRIMARY_DARK);
    transform: translateY(0px);
}

.pushable:not(:disabled):hover {
    filter: brightness(110%);
}

.pushable:not(:disabled):hover .pushable__label {
    transform: translateY(-6px);
}

.pushable:not(:disabled):active .pushable__label {
    transform: translateY(-2px);
}

.pushable:not(:disabled):hover .pushable__shadow {
    transform: translateY(4px);
}

.pushable:not(:disabled):active .pushable__shadow {
    transform: translateY(1px);
}

.pushable:focus:not(:focus-visible) {
    outline: none;
}

.max-width {
    max-width: 1200px;
    padding-inline: var(--MAX_WIDTH_PADDING);
    margin: auto;
}

.hidden {
    display: none;
}

@media (prefers-reduced-motion: no-preference) {
    a {
        transition: color 400ms ease-in;
    }

    a::before {
        transition: transform 400ms ease-in, background-color 400ms ease-in,
            opacity 400ms ease-in, filter 400ms ease-in;
    }

    a:hover,
    a:active {
        transition: color 200ms ease-out;
    }

    a:hover::before,
    a:active::before {
        transition: transform 200ms ease-out, background-color 200ms ease-out,
            opacity 200ms ease-out, filter 200ms ease-out;
    }

    .main__page {
        transform: translateX(calc(var(--i) * 100%));
        transition: transform 500ms ease-out, opacity 700ms ease-in-out;
    }

    .main__page-active {
        pointer-events: all;
    }

    .form__control label .letter {
        transition: transform 150ms calc(var(--i) * 50ms) ease;
    }

    .game-board__winner-line::after {
        background: linear-gradient(
            to left,
            var(--COLOR_TERTIARY),
            var(--COLOR_PRIMARY),
            var(--COLOR_SECONDARY),
            var(--COLOR_PRIMARY),
            var(--COLOR_TERTIARY)
        );
        background-size: 500% auto;
        animation: text-glow 1s ease-in-out infinite alternate;
        transform: translateX(-105%);
        transition: transform 500ms cubic-bezier(0.19, 0.91, 0.19, 0.91);
    }

    .game-board__winner-line.visible::after {
        transform: translateX(0);
    }

    .game-score__player {
        transition: transform 450ms ease-out, background-color 350ms ease-in-out,
            border-color 350ms ease-in-out;
    }

    .game-score__player:first-of-type {
        transform: translateX(-200px);
    }

    .game-score__player:last-of-type {
        transform: translateX(200px);
    }

    .game-score.visible .game-score__player:first-of-type,
    .game-score.visible .game-score__player:last-of-type {
        transform: translateX(0px);
    }

    .cell-button.blink {
        animation: blink 1000ms 1 ease-in-out alternate;
    }

    .pushable__shadow {
        transition: transform 600ms cubic-bezier(0.3, 0.7, 0.4, 1);
    }

    .pushable__label {
        transition: transform 600ms cubic-bezier(0.3, 0.7, 0.4, 1),
            background 600ms ease-in-out, color 600ms ease-in-out;
    }

    .pushable:hover .pushable__label {
        transition: transform 250ms cubic-bezier(0.3, 0.7, 0.4, 1.5);
    }

    .pushable:active .pushable__label {
        transition: transform 34ms;
    }

    .pushable:hover .pushable__shadow {
        transition: transform 250ms cubic-bezier(0.3, 0.7, 0.4, 1.5);
    }

    .pushable:active .pushable__shadow {
        transition: transform 34ms;
    }

    .app .text-glow {
        background: linear-gradient(
            to left,
            var(--COLOR_TERTIARY),
            var(--COLOR_PRIMARY),
            var(--COLOR_SECONDARY),
            var(--COLOR_PRIMARY),
            var(--COLOR_TERTIARY)
        );
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        background-size: 500% auto;
        animation: text-glow 1s ease-in-out infinite alternate;
    }

    .text-shadow {
        animation: breath 2s infinite ease-out alternate;
    }
}

@keyframes breath {
    from {
        filter: drop-shadow(1px 1px 2px currentColor)
            drop-shadow(-1px -1px 2px currentColor);
    }
    to {
        filter: drop-shadow(2px 2px 6px currentColor)
            drop-shadow(-2px -2px 6px currentColor);
    }
}

@keyframes text-glow {
    from {
        background-position: 0% 50%;
    }
    to {
        background-position: 50% 100%;
    }
}

@keyframes blink {
    0%,
    100% {
        background: transparent;
    }
    50%,
    75% {
        background-color: var(--COLOR_TERTIARY);
    }
}
